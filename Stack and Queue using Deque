class Node:
    
    def __init__(self,val):
        self.val = val
        self.prev = None
        self.next = None
class Deque:
    
    def __init__(self):
        self.head = None
        self.tail = None
        
    def isEmpty(self):
        if(self.head == None):
            return
        
    def insertFirst(self,element):
        tmp = Node(element)
        if(self.head == None):
            self.head = self.tail = tmp
            return 
        tmp.next = self.head
        self.head.prev = tmp
        self.head = tmp
        
    def insertlast(self,element):
        tmp = Node(element)
        if(self.head == None):
            self.head = self.tail = tmp
            return
        tmp.next = self.tail
        self.tail.prev = tmp
        self.tail = tmp
        
    def removeFirst(self):
        if(self.isEmpty()):
            return 
        self.head = self.head.next
        if(self.head != None):
            self.head.prev = None
            
    def removeLast(self):
        if(self.isEmpty()):
            return 
        self.tail = self.tail.prev
        if(self.tail != None):
            self.tail.next= None
            
            
    def display(self):
        curr = self.head
        while(curr != None):
            print(curr.val,end= "")
            curr = curr.next
            
class Stack:
    def __init__(self):
        self.stack = Deque()
        
    def push(self,element):
        self.stack.insertFirst(element) # self.stack.insertlast(element)
        
    def pop(self):
        self.stack.removeFirst()    # self.stack.removeLast()

    def display(self):
        self.stack.display()
        
class Queue:
    def __init__(self):
        self.queue = Deque()
    
    def enqueue(self,element):
        self.queue.insertFirst(element)     #self.que.insertLast(element)
        
    def dequeue(self):
        self.queue.removeLast()          # self.que.removeFirst()
        
    def display(self):
        self.queue.display()
        
stk = Stack()
stk.push(3)
stk.push(5)
stk.push(8)
stk.push(9)

stk.pop()
stk.display()

que = Queue()
que.enqueue(10)
que.enqueue(7)
que.enqueue(4)
que.enqueue(8)
que.enqueue(6)
que.dequeue()
que.display()

        
        
        
        
